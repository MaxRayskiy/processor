fin
pop xmm0  // a
fin
pop xmm1  // b
fin
pop xmm2  // c

fcmp xmm0 0.
jz zero_a

fmov xmm3 xmm1 // xmm3 = b
fmul xmm3 xmm1  // xmm3 = b^2
push xmm3
fmov xmm3 xmm0 // xmm3 = a
fmul xmm3 4.
fmul xmm3 xmm2 // xmm3 = 4ac
pop xmm2  // xmm2 = b^2
fsub xmm2 xmm3  // b^2-4ac
fmov xmm3 0.
fcmp xmm2 0.   // cmp D  0
jl no_roots
jz one_root
jg two_roots

no_roots:
fmov xmm3 65.
fout xmm3
jmp end

one_root:
fmul xmm1 -1.
fdiv xmm1 xmm0
fmov xmm2 2.
fdiv xmm1 xmm2
push xmm1
out
jmp end

two_roots:
fsqrt xmm2
fmov xmm3 xmm1
fmul xmm3 -1.
fadd xmm3 xmm2
push xmm2
fmov xmm2 2.
fdiv xmm3 xmm2
fdiv xmm3 xmm0
push xmm3
out
pop xmm3
push 10
out
pop eax
pop xmm2
fmov xmm3 xmm1
fmul xmm3 -1.
fsub xmm3 xmm2
fmov xmm2 2.
fdiv xmm3 xmm2
fdiv xmm3 xmm0
push xmm3
out
jmp end

zero_a:
fcmp xmm1 xmm3
jz zero_b
fmov xmm3 -1.
fmul xmm2 xmm3
fdiv xmm2 xmm1
push xmm2
out
jmp end

zero_b:
fcmp xmm2 xmm3
jz zero_c
push 66
out
jmp end

zero_c:
push 67
out
jmp end

end: